
;; Function func (func, funcdef_no=119, decl_uid=3493, cgraph_uid=120, symbol_order=119)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 91 uninteresting
Ignoring reg 87, has equiv memory
Reg 92 uninteresting
Reg 83: local to bb 4 def dominates all uses has unique first use
Reg 93 uninteresting
Examining insn 17, def for 83
  all ok
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 5 3 }
;; 3 succs { 5 4 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r91,l0) best CREG, allocno GENERAL_REGS
    r89: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r89,l0) best CREG, allocno GENERAL_REGS
    r88: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best CREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r86,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r86,l0) costs: AREG:2000,-1000 DREG:2000,2000 CREG:2000,2000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:19770,19770 NO_REX_SSE_REGS:19770,19770 SSE_REGS:19770,19770 MMX_REGS:30305,30305 INT_SSE_REGS:30305,30305 ALL_REGS:494060,494060 MEM:8315,8315
  a1(r93,l0) costs: AREG:1010,-505 DREG:1010,1010 CREG:1010,1010 BREG:1010,1010 SIREG:1010,1010 DIREG:1010,1010 AD_REGS:1010,1010 CLOBBERED_REGS:1010,1010 Q_REGS:1010,1010 NON_Q_REGS:1010,1010 TLS_GOTBASE_REGS:1010,1010 GENERAL_REGS:1010,1010 SSE_FIRST_REG:6060,6060 NO_REX_SSE_REGS:6060,6060 SSE_REGS:6060,6060 MMX_REGS:13130,13130 INT_SSE_REGS:13130,13130 ALL_REGS:212100,212100 MEM:4545,4545
  a2(r83,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:6060,6060 NO_REX_SSE_REGS:6060,6060 SSE_REGS:6060,6060 MMX_REGS:9595,9595 INT_SSE_REGS:9595,9595 ALL_REGS:155540,155540 MEM:2020,2020
  a3(r89,l0) costs: AREG:1010,1010 DREG:1010,1010 CREG:1010,-505 BREG:1010,1010 SIREG:1010,1010 DIREG:1010,1010 AD_REGS:1010,1010 CLOBBERED_REGS:1010,1010 Q_REGS:1010,1010 NON_Q_REGS:1010,1010 TLS_GOTBASE_REGS:1010,1010 GENERAL_REGS:1010,1010 SSE_FIRST_REG:6060,6060 NO_REX_SSE_REGS:6060,6060 SSE_REGS:6060,6060 MMX_REGS:13130,13130 INT_SSE_REGS:13130,13130 ALL_REGS:212100,212100 MEM:4545,4545
  a4(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:33540,33540 NO_REX_SSE_REGS:33540,33540 SSE_REGS:33540,33540 MMX_REGS:65670,65670 INT_SSE_REGS:65670,65670 ALL_REGS:1054720,1054720 MEM:15275,15275
  a5(r92,l0) costs: AREG:1010,-505 DREG:1010,1010 CREG:1010,1010 BREG:1010,1010 SIREG:1010,1010 DIREG:1010,1010 AD_REGS:1010,1010 CLOBBERED_REGS:1010,1010 Q_REGS:1010,1010 NON_Q_REGS:1010,1010 TLS_GOTBASE_REGS:1010,1010 GENERAL_REGS:1010,1010 SSE_FIRST_REG:6060,6060 NO_REX_SSE_REGS:6060,6060 SSE_REGS:6060,6060 MMX_REGS:13130,13130 INT_SSE_REGS:13130,13130 ALL_REGS:212100,212100 MEM:4545,4545
  a6(r88,l0) costs: AREG:1010,1010 DREG:1010,1010 CREG:1010,-505 BREG:1010,1010 SIREG:1010,1010 DIREG:1010,1010 AD_REGS:1010,1010 CLOBBERED_REGS:1010,1010 Q_REGS:1010,1010 NON_Q_REGS:1010,1010 TLS_GOTBASE_REGS:1010,1010 GENERAL_REGS:1010,1010 SSE_FIRST_REG:6060,6060 NO_REX_SSE_REGS:6060,6060 SSE_REGS:6060,6060 MMX_REGS:13130,13130 INT_SSE_REGS:13130,13130 ALL_REGS:212100,212100 MEM:5050,5050
  a7(r91,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,-1000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:26000,26000 INT_SSE_REGS:26000,26000 ALL_REGS:420000,420000 MEM:9000,9000

   Insn 29(l0): point = 0
   Insn 28(l0): point = 2
   Insn 22(l0): point = 5
   Insn 41(l0): point = 7
   Insn 20(l0): point = 9
   Insn 19(l0): point = 11
   Insn 18(l0): point = 13
   Insn 17(l0): point = 15
   Insn 40(l0): point = 17
   Insn 16(l0): point = 19
   Insn 15(l0): point = 21
   Insn 14(l0): point = 23
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 5(l0): point = 30
   Insn 9(l0): point = 33
   Insn 8(l0): point = 35
   Insn 4(l0): point = 37
   Insn 2(l0): point = 39
   Insn 39(l0): point = 41
 a0(r86): [33..37] [26..30] [3..5]
 a1(r93): [6..7]
 a2(r83): [6..15]
 a3(r89): [12..13]
 a4(r87): [14..39]
 a5(r92): [16..17]
 a6(r88): [22..23]
 a7(r91): [40..41]
Compressing live ranges: from 44 to 18 - 40%
Ranges after the compression:
 a0(r86): [12..15] [0..1]
 a1(r93): [2..3]
 a2(r83): [2..7]
 a3(r89): [4..5]
 a4(r87): [6..15]
 a5(r92): [8..9]
 a6(r88): [10..11]
 a7(r91): [16..17]
+++Allocating 56 bytes for conflict table (uncompressed size 64)
;; a0(r86,l0) conflicts: a4(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a1(r93,l0) conflicts: a2(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r83,l0) conflicts: a1(r93,l0) a3(r89,l0) a4(r87,l0)
;;     total conflict hard regs: 0-2 36-39
;;     conflict hard regs: 0-2 36-39

;; a3(r89,l0) conflicts: a2(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a4(r87,l0) conflicts: a0(r86,l0) a2(r83,l0) a5(r92,l0) a6(r88,l0)
;;     total conflict hard regs: 0-2 36-39
;;     conflict hard regs: 0-2 36-39

;; a5(r92,l0) conflicts: a4(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a6(r88,l0) conflicts: a4(r87,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a7(r91,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  cp0:a2(r83)<->a5(r92)@505:move
  cp1:a3(r89)<->a4(r87)@63:shuffle
  cp2:a0(r86)<->a2(r83)@63:shuffle
  cp3:a0(r86)<->a1(r93)@63:shuffle
  cp4:a4(r87)<->a7(r91)@1000:move
  pref0:a1(r93)<-hr0@757
  pref1:a5(r92)<-hr0@757
  pref2:a7(r91)<-hr2@1500
  pref3:a3(r89)<-hr2@757
  pref4:a6(r88)<-hr2@757
  pref5:a0(r86)<-hr0@1500
  regions=1, blocks=6, points=18
    allocnos=8 (big 0), copies=5, conflicts=0, ranges=9

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 5 4 3 2
    all: 0r86 1r93 2r83 3r89 4r87 5r92 6r88 7r91
    modified regnos: 83 86 87 88 89 91 92 93
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@80040
          2:( 3-6 40-43)@34590
      Allocno a0r86 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a1r93 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a2r83 of GENERAL_REGS(15) has 8 avail. regs  3-6 40-43, node:  3-6 40-43 (confl regs =  0-2 7-39 44-75)
      Allocno a3r89 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a4r87 of GENERAL_REGS(15) has 8 avail. regs  3-6 40-43, node:  3-6 40-43 (confl regs =  0-2 7-39 44-75)
      Allocno a5r92 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a6r88 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Allocno a7r91 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-75)
      Forming thread from colorable bucket:
        Forming thread by copy 4:a4r87-a7r91 (freq=1000):
          Result (freq=7590): a4r87(5590) a7r91(2000)
        Forming thread by copy 0:a2r83-a5r92 (freq=505):
          Result (freq=2020): a2r83(1010) a5r92(1010)
        Forming thread by copy 1:a3r89-a4r87 (freq=63):
          Result (freq=8600): a3r89(1010) a4r87(5590) a7r91(2000)
        Forming thread by copy 2:a0r86-a2r83 (freq=63):
          Result (freq=5315): a0r86(3295) a2r83(1010) a5r92(1010)
      Pushing a6(r88,l0)(cost 0)
      Pushing a1(r93,l0)(cost 0)
      Pushing a5(r92,l0)(cost 0)
      Pushing a2(r83,l0)(cost 0)
      Pushing a0(r86,l0)(cost 0)
      Pushing a3(r89,l0)(cost 0)
      Pushing a7(r91,l0)(cost 0)
      Pushing a4(r87,l0)(cost 0)
      Popping a4(r87,l0)  --         assign reg 3
      Popping a7(r91,l0)  --         assign reg 2
      Popping a3(r89,l0)  --         assign reg 2
      Popping a0(r86,l0)  --         assign reg 0
      Popping a2(r83,l0)  --         assign reg 4
      Popping a5(r92,l0)  --         assign reg 0
      Popping a1(r93,l0)  --         assign reg 0
      Popping a6(r88,l0)  --         assign reg 2
Disposition:
    2:r83  l0     4    0:r86  l0     0    4:r87  l0     3    6:r88  l0     2
    3:r89  l0     2    7:r91  l0     2    5:r92  l0     0    1:r93  l0     0
New iteration of spill/restore move
+++Costs: overall -4020, reg -4020, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


func

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 2 [cx] 7 [sp] 17 [flags]
;;  ref usage 	r0={3d,4u} r1={3d} r2={5d,3u} r6={1d,5u} r7={1d,7u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,4u,1e} r17={7d,2u} r18={2d} r19={1d,5u} r20={3d} r21={3d} r22={3d} r23={3d} r24={2d} r25={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={3d} r37={3d} r38={2d} r39={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r83={1d,1u} r86={3d,1u} r87={1d,6u} r88={1d,1u} r89={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 184{140d,43u,1e} in 20{18 regular + 2 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
(note 6 1 39 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 39 6 2 2 (set (reg:SI 91)
        (reg:SI 2 cx [ n ])) "code4.c":4:1 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [ n ])
        (nil)))
(insn 2 39 3 2 (set (reg/v:SI 87 [ n ])
        (reg:SI 91)) "code4.c":4:1 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (expr_list:REG_EQUIV (mem/c:SI (reg/f:DI 16 argp) [1 n+0 S4 A64])
            (nil))))
(note 3 2 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 3 8 2 (set (reg:SI 86 [ <retval> ])
        (reg/v:SI 87 [ n ])) "code4.c":6:16 81 {*movsi_internal}
     (nil))
(insn 8 4 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ n ])
            (const_int 1 [0x1]))) "code4.c":5:7 11 {*cmpsi_1}
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "code4.c":5:7 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 225163668 (nil)))
 -> 27)
(note 10 9 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 10 11 3 (set (reg:SI 86 [ <retval> ])
        (reg/v:SI 87 [ n ])) "code4.c":8:16 81 {*movsi_internal}
     (nil))
(insn 11 5 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v:SI 87 [ n ])
            (const_int 2 [0x2]))) "code4.c":7:12 11 {*cmpsi_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 27)
            (pc))) "code4.c":7:12 891 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 386869180 (nil)))
 -> 27)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (parallel [
            (set (reg:SI 88)
                (plus:SI (reg/v:SI 87 [ n ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "code4.c":10:16 229 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 15 14 16 4 (set (reg:SI 2 cx)
        (reg:SI 88)) "code4.c":10:16 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(call_insn/u/c 16 15 40 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("func") [flags 0x3]  <function_decl 0000000002c85d00 func>) [0 func S1 A8])
            (const_int 32 [0x20]))) "code4.c":10:16 909 {*call_value}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 40 16 17 4 (set (reg:SI 92)
        (reg:SI 0 ax)) "code4.c":10:16 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 17 40 18 4 (set (reg:SI 83 [ _2 ])
        (reg:SI 92)) "code4.c":10:16 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92)
        (nil)))
(insn 18 17 19 4 (parallel [
            (set (reg:SI 89)
                (plus:SI (reg/v:SI 87 [ n ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "code4.c":10:32 229 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 87 [ n ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 19 18 20 4 (set (reg:SI 2 cx)
        (reg:SI 89)) "code4.c":10:32 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 89)
        (nil)))
(call_insn/u/c 20 19 41 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("func") [flags 0x3]  <function_decl 0000000002c85d00 func>) [0 func S1 A8])
            (const_int 32 [0x20]))) "code4.c":10:32 909 {*call_value}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 41 20 21 4 (set (reg:SI 93)
        (reg:SI 0 ax)) "code4.c":10:32 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(note 21 41 22 4 NOTE_INSN_DELETED)
(insn 22 21 27 4 (parallel [
            (set (reg:SI 86 [ <retval> ])
                (plus:SI (reg:SI 83 [ _2 ])
                    (reg:SI 93)))
            (clobber (reg:CC 17 flags))
        ]) "code4.c":10:30 229 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 93)
        (expr_list:REG_DEAD (reg:SI 83 [ _2 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(code_label 27 22 30 5 1 (nil) [2 uses])
(note 30 27 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 30 29 5 (set (reg/i:SI 0 ax)
        (reg:SI 86 [ <retval> ])) "code4.c":11:1 81 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86 [ <retval> ])
        (nil)))
(insn 29 28 0 5 (use (reg/i:SI 0 ax)) "code4.c":11:1 -1
     (nil))

;; Function main (main, funcdef_no=120, decl_uid=3495, cgraph_uid=121, symbol_order=120) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 83 uninteresting
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 83: (insn_list:REG_DEP_TRUE 11 (nil))

Pass 0 for finding pseudo/allocno costs

    r83: preferred CREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best CREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000,2000 DREG:2000,2000 CREG:2000,-1000 BREG:2000,2000 SIREG:2000,2000 DIREG:2000,2000 AD_REGS:2000,2000 CLOBBERED_REGS:2000,2000 Q_REGS:2000,2000 NON_Q_REGS:2000,2000 TLS_GOTBASE_REGS:2000,2000 GENERAL_REGS:2000,2000 SSE_FIRST_REG:12000,12000 NO_REX_SSE_REGS:12000,12000 SSE_REGS:12000,12000 MMX_REGS:23000,23000 INT_SSE_REGS:23000,23000 ALL_REGS:312000,312000 MEM:9000,9000

   Insn 19(l0): point = 0
   Insn 18(l0): point = 2
   Insn 13(l0): point = 4
   Insn 12(l0): point = 6
   Insn 11(l0): point = 8
   Insn 10(l0): point = 10
   Insn 9(l0): point = 12
   Insn 8(l0): point = 14
   Insn 7(l0): point = 16
   Insn 6(l0): point = 18
   Insn 3(l0): point = 20
 a0(r83): [7..8]
Compressing live ranges: from 23 to 2 - 8%
Ranges after the compression:
 a0(r83): [0..1]
+++Allocating 0 bytes for conflict table (uncompressed size 8)
;; a0(r83,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:


  pref0:a0(r83)<-hr2@1500
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 2
    all: 0r83
    modified regnos: 83
    border:
    Pressure: GENERAL_REGS=2
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0 2-6 36-43)@20000
      Allocno a0r83 of GENERAL_REGS(15) has 14 avail. regs  0 2-6 36-43, node:  0 2-6 36-43 (confl regs =  1 7-35 44-75)
      Forming thread from colorable bucket:
      Pushing a0(r83,l0)(cost 0)
      Popping a0(r83,l0)  --         assign reg 2
Disposition:
    0:r83  l0     2
New iteration of spill/restore move
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  fully invalidated by EH 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 52 [xmm16] 53 [xmm17] 54 [xmm18] 55 [xmm19] 56 [xmm20] 57 [xmm21] 58 [xmm22] 59 [xmm23] 60 [xmm24] 61 [xmm25] 62 [xmm26] 63 [xmm27] 64 [xmm28] 65 [xmm29] 66 [xmm30] 67 [xmm31] 68 [k0] 69 [k1] 70 [k2] 71 [k3] 72 [k4] 73 [k5] 74 [k6] 75 [k7]
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 7 [sp]
;;  ref usage 	r0={5d,2u} r1={6d,1u} r2={8d,3u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={1d,2u} r20={5d} r21={5d} r22={5d} r23={5d} r24={4d} r25={4d} r28={4d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={5d} r37={5d} r38={4d} r39={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r83={1d,1u} 
;;    total ref usage 256{238d,18u,0e} in 11{7 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 3 2 6 2 (call (mem:QI (symbol_ref:DI ("__main") [flags 0x43]  <function_decl 0000000002c8e600 __main>) [0  S1 A8])
        (const_int 32 [0x20])) "code4.c":14:1 898 {*call}
     (expr_list:REG_EH_REGION (const_int -2147483648 [0xffffffff80000000])
        (nil))
    (nil))
(insn 6 3 7 2 (set (reg:SI 2 cx)
        (const_int 67 [0x43])) "code4.c":18:9 81 {*movsi_internal}
     (nil))
(call_insn/u/c 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("func") [flags 0x3]  <function_decl 0000000002c85d00 func>) [0 func S1 A8])
            (const_int 32 [0x20]))) "code4.c":18:9 909 {*call_value}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 8 7 9 2 (set (reg:SI 2 cx)
        (const_int 5 [0x5])) "code4.c":19:9 81 {*movsi_internal}
     (nil))
(call_insn/u/c 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("func") [flags 0x3]  <function_decl 0000000002c85d00 func>) [0 func S1 A8])
            (const_int 32 [0x20]))) "code4.c":19:9 909 {*call_value}
     (expr_list:REG_DEAD (reg:SI 2 cx)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 2 cx))
        (nil)))
(insn 10 9 11 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "code4.c":21:5 81 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 83)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0000000002c5aea0 *.LC0>)) "code4.c":21:5 80 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0000000002c5aea0 *.LC0>)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 2 cx)
        (reg/f:DI 83)) "code4.c":21:5 80 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (expr_list:REG_EQUAL (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0000000002c5aea0 *.LC0>)
            (nil))))
(call_insn 13 12 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x43]  <function_decl 0000000002a57000 printf>) [0 __builtin_printf S1 A8])
            (const_int 32 [0x20]))) "code4.c":21:5 909 {*call_value}
     (expr_list:REG_DEAD (reg:DI 2 cx)
        (expr_list:REG_DEAD (reg:SI 1 dx)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 2 cx))
        (expr_list:SI (use (reg:SI 1 dx))
            (nil))))
(insn 18 13 19 2 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "code4.c":22:1 81 {*movsi_internal}
     (nil))
(insn 19 18 0 2 (use (reg/i:SI 0 ax)) "code4.c":22:1 -1
     (nil))
