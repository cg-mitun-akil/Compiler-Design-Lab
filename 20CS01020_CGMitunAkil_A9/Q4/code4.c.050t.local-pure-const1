
;; Function func (func, funcdef_no=119, decl_uid=3493, cgraph_uid=120, symbol_order=119)



 local analysis of func/119
   scanning: if (n_7(D) == 1)
  scanning: // predicted unlikely by early return (on trees) predictor.
  scanning: if (n_7(D) == 2)
  scanning: // predicted unlikely by early return (on trees) predictor.
  scanning: _1 = n_7(D) + -1;
  scanning: _2 = func (_1);
    Recursive call can loop.
  scanning: _3 = n_7(D) + -2;
  scanning: _4 = func (_3);
    Recursive call can loop.
  scanning: _11 = _2 + _4;
  scanning: // predicted unlikely by early return (on trees) predictor.
  scanning: return _5;
Function is locally looping.
Function is locally const.
Function found to be looping const: func/119
Declaration updated to be looping const: func/119
int func (int n)
{
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _11;

  <bb 2> [local count: 1073741824]:
  if (n_7(D) == 1)
    goto <bb 3>; [20.97%]
  else
    goto <bb 4>; [79.03%]

  <bb 3> [local count: 225163664]:
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [100.00%]

  <bb 4> [local count: 848578161]:
  if (n_7(D) == 2)
    goto <bb 5>; [36.03%]
  else
    goto <bb 6>; [63.97%]

  <bb 5> [local count: 305742709]:
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [100.00%]

  <bb 6> [local count: 542835452]:
  _1 = n_7(D) + -1;
  _2 = func (_1);
  _3 = n_7(D) + -2;
  _4 = func (_3);
  _11 = _2 + _4;
  // predicted unlikely by early return (on trees) predictor.

  <bb 7> [local count: 1073741824]:
  # _5 = PHI <1(3), 2(5), _11(6)>
  return _5;

}



;; Function main (main, funcdef_no=120, decl_uid=3495, cgraph_uid=121, symbol_order=120) (executed once)



 local analysis of main/120
   scanning: func (67);
  scanning: func (5);
  scanning: printf ("%d", 3);
  scanning: return 0;
Function is locally looping.
Function can locally free.
int main ()
{
  int a;

  <bb 2> [local count: 1073741824]:
  func (67);
  func (5);
  printf ("%d", 3);
  return 0;

}


